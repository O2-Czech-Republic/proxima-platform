/*
 * Copyright 2017-2024 O2 Czech Republic, a.s.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'cz.o2.proxima.java-conventions'
}

def kafka_version = "2.8.1"

dependencies {
  api project(':proxima-core')
  api project(':proxima-direct-core')
  intoShadow("org.apache.kafka:kafka-clients:${kafka_version}") {
    exclude group: "org.apache.kafka", module: "kafka-metadata"
    exclude group: "org.apache.kafka", module: "kafka_2.13"
    exclude group: "org.apache.kafka", module: "kafka-streams"
    exclude group: "org.apache.kafka", module: "kafka-streams-test-utils"
    exclude group: "org.springframework.kafka", module: "spring-kafka-test"
  }
  intoShadow 'com.fasterxml.jackson.core:jackson-databind:2.12.6.1'
  implementation "cz.o2.proxima:proxima-vendor:${project.version}"
  testImplementation project(path: ':proxima-core', configuration: 'testsJar')
  testImplementation project(path: ':proxima-direct-core', configuration: 'testsJar')
  testImplementation libraries.slf4j_log4j
  testImplementation libraries.junit4
  testImplementation libraries.mockito_core
  testImplementation 'org.springframework.kafka:spring-kafka-test:2.7.9'
  testImplementation "org.apache.kafka:kafka-clients:${kafka_version}"
  testImplementation "org.apache.kafka:kafka-metadata:${kafka_version}"
  testImplementation "org.apache.kafka:kafka_2.13:${kafka_version}"
  testImplementation "org.apache.kafka:kafka_2.13:${kafka_version}"
  testImplementation "org.apache.kafka:kafka-streams:${kafka_version}"
  testImplementation "org.apache.kafka:kafka-streams-test-utils:${kafka_version}"
  compileOnly libraries.auto_service_annotations
  compileAnnotationProcessor libraries.lombok
  annotationProcessor libraries.auto_service
}

description = 'cz.o2.proxima:proxima-direct-io-kafka'

enableShadowJar(project) {
  if (!it.endsWith(".class")) {
    return true
  }
  def allowed = ["cz/o2/proxima", "META-INF"]
  if (allowed.find { s -> it.startsWith(s) } != null) {
    return true
  }
  def regexes = [~"^[^/]+.class\$"]
  regexes.find { p -> it =~ p }
}

shadowJar {
  ["org.apache.kafka", "net.sf", "com.yammer", "scala", "com.101tec",
   "org.apache.zookeeper", "com.google", "com.fasterxml", "org.xerial",
   "net.jpountz", "com.github.luben"].each {

    relocate it, "cz.o2.proxima.kafka.shaded.${it}"
  }
  exclude "org/slf4j/**"
}

registerTestsJar(project)

publishArtifacts(project, "default")

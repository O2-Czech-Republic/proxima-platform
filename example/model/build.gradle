/*
 * Copyright 2017-2023 O2 Czech Republic, a.s.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

dependencies {
  implementation project(path: ':proxima-core', configuration: 'shadowJar')
  implementation project(':proxima-server-rpc-proto')
  implementation project(':example-proto')
  implementation project(':proxima-direct-io-kafka')
  implementation project(':proxima-direct-io-cassandra')
  implementation project(':proxima-direct-io-hbase')
  implementation project(':proxima-direct-io-hdfs')
  implementation project(':proxima-scheme-proto')
  implementation libraries.slf4j_api
  compileOnly project(path: ':proxima-compiler-java-cli', configuration: 'shadowJar')
  compileOnly project(path: ':proxima-direct-compiler-plugin', configuration: 'shadowJar')
  testImplementation project(path: ':proxima-direct-core')
  testImplementation project(path: ':proxima-direct-core', configuration: 'testsJar')
  testImplementation libraries.slf4j_log4j
  testImplementation libraries.junit4
  compileAnnotationProcessor libraries.lombok
}

group = 'cz.o2.proxima.example'
description = 'cz.o2.proxima.example:example-model'

task generateModel(type: JavaExec) {
  group = "Build"
  description = "Build the Proxima Model"
  classpath = configurations.getAt("compileClasspath")
  //inputs.files ("src/main/resources/reference.conf" + classpath)
  //outputs.dirs "generated/sources/cz/o2/proxima/example/model"
  main = "cz.o2.proxima.generator.ModelGenerator"
  args "-t", "${project.buildDir}/generated/sources/", "-p", "cz.o2.proxima.example.model", "-f", "src/main/resources/reference.conf"
}

tasks.named("compileJava") {
  dependsOn generateModel
}

tasks.named("sourcesJar") {
  dependsOn compileJava
}

sourceSets.main.java.srcDirs += ["${project.buildDir}/generated/sources/"]

spotless {
  java {
    targetExclude('**/generated/**')
  }
}

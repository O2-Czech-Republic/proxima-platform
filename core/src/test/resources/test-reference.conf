{
  entities: {
    event: {
      attributes: {
        data: { scheme: "bytes" }
      }
    }

    gateway: {
      attributes: {
        armed: { scheme: bytes }
        users: { scheme: bytes }
        status: { scheme: bytes }

        # the following defines a pattern for attributes
        # each attribute that matches the pattern is treated the same
        "device.*": { scheme: bytes }

        # settings for specific rule
        "rule.*": { scheme: bytes }

        # this is fake attribute that always fails validation
        fail: { scheme: "fail:whenever" }

        bytes: { scheme: bytes }
      }
    }

    dummy: {
      attributes: {
        data: { scheme: bytes }
        "wildcard.*": { scheme: "bytes" }        
      }
    }

    proxied {

      attributes {
        # this is "protected" field and should not be accessed directly
        "_e.*": { scheme: bytes }

        # this is proxy public attribute performing transformation
        "event.*": {
          proxy: "_e.*"
          apply: cz.o2.proxima.transform.EventTransform
        }
      }

    }

    replica {
      from: gateway
    }

  }

  attributeFamilies: {
    event-storage-stream: {
      entity: event
      attributes: [ data ]
      # this is testing only storage
      storage: "inmem:///proxima_events"
      type: primary
      access: "commit-log, partitioned-view"
    }
    event-storage-bulk {
      entity: event
      attributes: [ data ]
      storage: "inmem-bulk:///proxima_events/bulk"
      type: replica
      access: write-only
    }
    gateway-storage-steam: {
      entity: gateway
      attributes: [ "*" ]
      storage: "inmem:///proxima_gateway"
      type: primary
      access: "commit-log, random-access, partitioned-view"
    }
    gateway-storage-batch: {
      entity: gateway
      attributes: [ "*" ]
      storage: "inmem:///data/proxima/gateway"
      type: replica
      access: "commit-log, random-access"
    }
    dummy-storage: {
      entity: dummy
      attributes: [ "*" ]
      storage: "inmem:///proxima/dummy"
      type: primary
      access: "commit-log, random-access"
    }

    proxy-primary {
      entity: proxied
      attributes: [ "_e.*" ]
      storage: "inmem:///proxima/proxy"
      type: primary
      access: "commit-log, random-access, partitioned-cached-view"
    }

    replica-storage {
      entity: replica
      attributes: [ "*" ]
      storage: "inmem:///proxima/replica"
      type: primary
      access: "commit-log"
    }

  }

  transformations {
    event-data-to-dummy-wildcard {
      entity: event
      attributes: [ "data" ]
      using: cz.o2.proxima.transform.EventDataToDummy
      # this is default, but add it to test parsing
      filter: cz.o2.proxima.storage.PassthroughFilter
    }

    disabled {
      entity: event
      attributes: [ "data" ]
      using: cz.o2.proxima.transform.EventDataToDummy
      # this is default, but add it to test parsing
      filter: cz.o2.proxima.storage.PassthroughFilter
      disabled: true
    }

  }

}


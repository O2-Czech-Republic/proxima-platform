/*
 * Copyright 2017-2023 O2 Czech Republic, a.s.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
  id 'java-library'
  id 'maven-publish'
  id "com.diffplug.spotless"
}

repositories {
  mavenLocal()
  maven {
    url = uri('https://repo.maven.apache.org/maven2/')
  }

  maven {
    url = uri('https://packages.confluent.io/maven/')
  }
}

group = 'cz.o2.proxima'
version = '0.12-SNAPSHOT'
java.sourceCompatibility = JavaVersion.VERSION_11

def auto_service_version = "1.0.1"
def grpc_version = "1.52.1"
def guava_version = "31.1-jre"
def lombok_version = "1.18.16"
def protobuf_version = "3.21.12"

ext.libraries = [
  auto_service: "com.google.auto.service:auto-service:${auto_service_version}",
  lombok: "org.projectlombok:lombok:${lombok_version}",
  protobuf_java: "com.google.protobuf:protobuf-java:${protobuf_version}",
  protobuf_java_util: "com.google.protobuf:protobuf-java-util:${protobuf_version}",
  protoc: "com.google.protobuf:protoc:${protobuf_version}",
  gen_grpc: "io.grpc:protoc-gen-grpc-java:${grpc_version}",
  grpc_core: "io.grpc:grpc-core:${grpc_version}",
  grpc_api: "io.grpc:grpc-api:${grpc_version}",
  grpc_netty: "io.grpc:grpc-netty:${grpc_version}",
  grpc_netty_shaded: "io.grpc:grpc-netty-shaded:${grpc_version}",
  grpc_protobuf: "io.grpc:grpc-protobuf:${grpc_version}",
  grpc_stub: "io.grpc:grpc-stub:${grpc_version}",
  grpc_all: "io.grpc:grpc-all:${grpc_version}",
  guava: "com.google.guava:guava:${guava_version}"
]

ext.coreShade = "cz.o2.proxima.internal.shaded"
ext.serializationShade = "cz.o2.proxima.io.serialization.shaded"

tasks.withType(Javadoc) {
  options.encoding = 'UTF-8'
}

tasks.withType(JavaCompile) {
  dependsOn "spotlessApply"
  options.encoding = 'UTF-8'
}

spotless {
  format 'misc', {
    // define the files to apply `misc` to
    target '*.gradle', '*.md', '.gitignore'

    // define the steps to apply to those files
    trimTrailingWhitespace()
    indentWithSpaces(2)
    endWithNewline()
  }
  java {
    // apply a specific flavor of google-java-format
    googleJavaFormat('1.8')
    removeUnusedImports()
  }
}

publishing {
  publications {
    maven(MavenPublication) {
    }
  }
}



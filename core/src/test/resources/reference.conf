{
  entities: {
    # event entity is an event ingested from MQTT or REST API
    event: {
      attributes: {
        data: { scheme: "bytes" }
      }
    }

    # this entity represents state of the gateway
    gateway: {
      attributes: {
        armed: { scheme: "bytes" }
        users: { scheme: "bytes" }
        status: { scheme: "bytes" }

        # the following defines a pattern for attributes
        # each attribute that matches the pattern is treated the same
        "device.*": { scheme: "bytes" }

        # settings for specific rule
        "rule.*": { scheme: "bytes" }

        # this is fake attribute that always fails validation
        fail: { scheme: "fail:whenever" }
        # this attribute has bytes scheme, which always succeeds
        bytes: { scheme: "bytes" }
      }
    }

    dummy: {
      attributes: {
        data: { scheme: bytes }
        "wildcard.*": { scheme: "bytes" }
      }
    }

  }

  attributeFamilies: {
    event-storage-stream: {
      entity: event
      attributes: [ data ]
      # this is testing only storage
      storage: "inmem:///proxima_events"
      type: primary
      access: "commit-log, partitioned-view"
    }
    event-storage-bulk {
      entity: event
      attributes: [ data ]
      storage: "inmem-bulk:///proxima_events/bulk"
      type: replica
      access: batch-updates
    }
    gateway-storage-steam: {
      entity: gateway
      attributes: [ "*" ]
      storage: "inmem:///proxima_gateway"
      type: primary
      access: "commit-log, random-access, partitioned-view"
    }
    gateway-storage-batch: {
      entity: gateway
      attributes: [ "*" ]
      storage: "inmem:///data/proxima/gateway"
      type: replica
      access: "commit-log, random-access"
    }
    dummy-storage: {
      entity: dummy
      attributes: [ "*" ]
      storage: "inmem:///proxima/dummy"
      type: primary
      access: "commit-log, random-access"
    }
  }
}

